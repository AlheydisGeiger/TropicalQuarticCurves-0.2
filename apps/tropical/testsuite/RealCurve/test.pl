# Properties of RealQuarticCurve

my $coefs = new Vector<Int>([5,1,2,2,0,0,4,0,1,16,7,9,12,16,33]);
my $coefs2 = new Vector<Int>([10,4,6,0,1,4,2,0,0,4,5,1,2,4,9]);
my $D = new RealQuarticCurve<Min>(COEFFICIENTS=>$coefs,SIGNS=>[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]);
my $C = new RealQuarticCurve<Min>(COEFFICIENTS=>$coefs2,SIGNS=>[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]);
my $C2 = new RealQuarticCurve<Min>(COEFFICIENTS=>$coefs2,SIGNS=>[1,1,1,1,1,1,1,1,1,1,1,-1,1,1,-1]);
my $C3 = new RealQuarticCurve<Min>(COEFFICIENTS=>$coefs2,SIGNS=>[1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1]);

$C->DUAL_SUBDIVISION->MAXIMAL_CELLS;
$C->DUAL_SUBDIVISION->ALL_DEFORMATION_MOTIFS;
$C2->DUAL_SUBDIVISION->MAXIMAL_CELLS;
$C2->DUAL_SUBDIVISION->ALL_DEFORMATION_MOTIFS;
$C3->DUAL_SUBDIVISION->MAXIMAL_CELLS;
$C3->DUAL_SUBDIVISION->ALL_DEFORMATION_MOTIFS;
$D->DUAL_SUBDIVISION->MAXIMAL_CELLS;
$D->DUAL_SUBDIVISION->ALL_DEFORMATION_MOTIFS;
$C->REAL_BITANGENTS;
$C2->REAL_BITANGENTS;
$C3->REAL_BITANGENTS;
$D->REAL_BITANGENTS;
$C->REAL_BITANGENT_TYPES;
$C2->REAL_BITANGENT_TYPES;
$C3->REAL_BITANGENT_TYPES;
$D->REAL_BITANGENT_TYPES;
$C->REAL_BITANGENT_SHAPES;
$C2->REAL_BITANGENT_SHAPES;
$C3->REAL_BITANGENT_SHAPES;
$D->REAL_BITANGENT_SHAPES;
$C->REAL_BITANGENTS;
$C2->REAL_BITANGENTS;
$C3->REAL_BITANGENTS;
$D->REAL_BITANGENTS;
$C->N_REAL_BITANGENTS;
$C2->N_REAL_BITANGENTS;
$C3->N_REAL_BITANGENTS;
$D->N_REAL_BITANGENTS;
$C->TWISTED_EDGES;
$C2->TWISTED_EDGES;
$C3->TWISTED_EDGES;
$D->TWISTED_EDGES;
$C->IS_DIVIDING;
$C2->IS_DIVIDING;
$C3->IS_DIVIDING;
$D->IS_DIVIDING;
$C->N_OVALS;
$C2->N_OVALS;
$C3->N_OVALS;
$D->N_OVALS;
$C->PATCHWORK;
$C2->PATCHWORK;
$C3->PATCHWORK;
$D->PATCHWORK;
$C->QUARTIC_CURVE->DUAL_SUBDIVISION->POLYHEDRAL_COMPLEX->MAXIMAL_POLYTOPES_INCIDENCES;
#Test the following by hand! Does this test make sense?
compare_data("Curve1", $C);
#compare_data("Curve2", $C2);
#compare_data("Curve3", $C3);
#compare_data("Curve4", $D);


